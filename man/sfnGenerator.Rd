% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfnGenerator.R
\name{sfnGenerator}
\alias{sfnGenerator}
\title{Synthetic Insurance Fraud Network Data Generator}
\usage{
sfnGenerator(
  TargetPrev = 0.01,
  NrPH = 10000,
  NrExperts = floor(0.01 * NrPH),
  NrBrokers = floor(0.01 * NrPH),
  NrGarages = floor(0.03 * NrPH),
  NrPersons = NrPH * 1.5,
  ExcludeParties = "Expert",
  Age = list(AvgAge = 40, SDAge = 15, RangeAge = c(18, 80)),
  Exposure = list(AvgExp = 5, SDExp = 1.5, RangeExp = c(0, 20)),
  Gender = list(propMale = 0.71, propFemale = 0.28, propNonBinary = 0.01),
  stdize = normalize,
  Formulas = list(ClaimFrequency = formula(~AgePHBin + GenderPH + AgeCarBin + Coverage +
    Fuel + BonusMalusBin), ClaimSeverity = formula(~AgePHBin + Coverage + BonusMalusBin),
    Fraud = formula(~ClaimAmount + ClaimAge + n1Size + n2Size + NrContractsPH + AgePH +
    n2.ratioFraud)),
  Coefficients = list(ClaimFrequency = c(-2.17531, c(log(0.85), log(0.75), log(0.7),
    log(0.6), log(0.55), log(0.6), log(0.7)), c(log(1.5), 0), c(log(0.9), log(0.8),
    log(0.6)), -0.12, -0.11, log(1.19), c(0.12, 0.18, 0.34, 0.48, 0.54, 0.78)),
    ClaimSeverity = c(6.06, c(log(0.85), log(0.75), log(0.85), log(0.85), log(1.15),
    log(1.25), log(1.5)), c(-0.16, 0.11), c(0.1, 0.15, 0.15, 0.15, 0.2, 0.3)), Fraud =
    c(-2.5, 0.2, -0.35, 2, -2, -1.5, -2, 3)),
  zeta = 0,
  theta = list(AgeVsGender = -0.15, AgeVsExposure = 0.15, AgeVsNrContracts = 0.95),
  BusinessRules = list(Expressions = list("cumsum(ClaimAmountOrig) > 2 * ValueCar",
    "ClaimAmountOrig * 0.75 > ValueCar", "c(F, diff(ClaimDate) <= 1)"), byVariable =
    list("ContractID", NULL, "ContractID")),
  Parallel = TRUE,
  NrCores = detectCores() - 2,
  printProgress = TRUE,
  tmpFiles = FALSE,
  Seed = 7032018
)
}
\arguments{
\item{TargetPrev}{target class imbalance (i.e. the ratio of the number of fraudulent claims to the total number of claims).}

\item{NrPH}{total number of policyholders}

\item{NrExperts}{total number of experts in the network. Default is 1\% of NrPH.}

\item{NrBrokers}{total number of brokers in the network. Default is 1\% of NrPH.}

\item{NrGarages}{total number of garages in network. Default is 3\% of NrPH.}

\item{NrPersons}{total number of involved persons in network. Default is 150\% of NrPH.}

\item{ExcludeParties}{character vector to indicate which type of party (or parties) have to be excluded. By default, the expert is excluded. When no parties have to be excluded,
set \code{ExcludeParties = NULL}.}

\item{Age}{a list with the named parameters for generating the age of the policyholders. By default,
\code{Age = list(AvgAge = 40, SDAge = 15, RangeAge = c(18, 80))}. Hence, the average age is 40, the standard deviation 15, the minimum 18
and the maximum is 80.}

\item{Exposure}{a list with the named parameters for generating the exposure of the policyholders. By default,
\code{Exposure = list(AvgExp = 5, SDExp = 1.5, RangeExp = c(0, 20))}. Thus, the average exposure is 5, the standard deviation 1.5, the minimum 0
and the maximum 20.}

\item{Gender}{a list with the named parameters for generating the gender of the policyholders. By default,
\code{Gender = list(propMale   = 0.71, propFemale = 0.28, propNonBinary = 0.01)}. Hence, the proportion of males is 71\%, the proportion
of females is 28\% and the proportion of non-binaries is 1\%.}

\item{stdize}{a function to standardize or normalize the covariates of the data-generating fraud model. This function should take vector
as input and return a vector. By default, the vector is normalized to the range [-1, 1] using the min-max feature scaling (see \code{\link{normalize}}).}

\item{Formulas}{named list with formulas for the \code{ClaimFrequency}, \code{ClaimSeverity} and \code{Fraud} model.}

\item{Coefficients}{named list with coefficients for the \code{ClaimFrequency}, \code{ClaimSeverity} and \code{Fraud} model.}

\item{zeta}{the parameter controlling the dependency between the claim frequency and claim severity. By default, we set \code{zeta = 0} so that the
claim frequency and claim severity are independent.}

\item{theta}{named list with the values for the dependence parameter in the copulas. The slot \code{AgeVsGender} specifies the dependency between the age of the policyholder
and the gender of the policyholder, the slot \code{AgeVsExposure} the dependency between the age of the policyholder and the exposure, the slot \code{AgeVsContracts}
the dependency between the age of the policyholder and the number of contracts and the slot \code{AgeCarVsValueCar} controls the dependency between the
age of the car and the value of the car. If the list contains just one entry, the remaining entries will be set to their default values.}

\item{BusinessRules}{logical expressions to flag suspicious claims}

\item{Parallel}{logical, indicates whether parallel computing has to be used.}

\item{NrCores}{the number of cores that are utilized for parallel computing .}

\item{printProgress}{logical, indicates whether the progress has to be printed.}

\item{tmpFiles}{logical, indicating whether temporary files have to be saved while generating the synthetic data set. Useful when generating
large data sets.}

\item{Seed}{the seed that is set at the beginning of the synthetic data generation. For reproducibility.}
}
\value{
An object of type \code{sfnData} with the following slots:

\item{call}{the matched call.}

\item{Dt}{the synthetic data set.}

\item{SummaryPlots}{a ggplot object with the summary plots of the synthetic data set.}

\item{TargetPrev}{the target class imbalance.}

\item{TruePrevalence}{the class imbalance in the synthetic data set.}

\item{AdjMatOrig}{a \code{data.table} which contains all information to construct the adjacency matrix.}

\item{AdjMat}{the adjacency matrix of the bipartite graph.}

\item{BiRank}{the object resulting from running the BiRank algorithm using the function \code{\link{BiRankFr}}.}
}
\description{
Function to generate synthetic insurance fraud network data. This function corresponds to the simulation engine as described in
Campo, B.D.C. and Antonio, K. (2023).
}
\examples{
\dontrun{
SimObj = sfnGenerator(TargetPrev = 0.05, NrPH = 5000, Seed = 1,
 printProgress = FALSE, Parallel = FALSE)
 }
}
